AWSTemplateFormatVersion: 2010-09-09

Description: Shared cloud networking resources - targets eu-west-1

Parameters:
  CollatorP2PPort:
    Type: Number
    Default: 33333
  CollatorHTTPPort:
    Type: Number
    Default: 1833
  CollatorWSPort:
    Type: 1933
  EmbeddedRelayerP2PPort: 
    Type: Number
    Default: 33334

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      # NOTE: slicable into 6 subnets
      # 172.26.0.0/19
      # 172.26.32.0/19
      # 172.26.64.0/19
      # 172.26.96.0/19
      # 172.26.128.0/19
      # 172.26.160.0/19
      CidrBlock: 172.26.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: !Ref InstanceTenancy

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: ${AWS::StackName}-internet-gateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: eu-west-1a
      CidrBlock: 172.26.0.0/19
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-public-subnet-eu-west-1a

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: eu-west-1b
      CidrBlock: 172.26.32.0/19
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-public-subnet-eu-west-1b

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: eu-west-1a
      CidrBlock: 172.26.64.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-private-subnet-eu-west-1a

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: eu-west-1b
      CidrBlock: 172.26.96.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-private-subnet-eu-west-1b

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-public-route-table

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-private-route-table-eu-west-1a

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-private-route-table-eu-west-1b

  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2
  
  CollatorSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-collator-security-group
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - Description: !Sub ${AWS::StackName}-security-group-ingress-ssh
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22

        - Description: !Sub ${AWS::StackName}-security-group-ingress-collator-p2p
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: !Ref CollatorP2PPort
          ToPort: !Ref CollatorP2PPort

        - Description: !Sub ${AWS::StackName}-security-group-ingress-collator-http
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: !Ref CollatorHTTPPort
          ToPort: !Ref CollatorHTTPPort

        - Description: !Sub ${AWS::StackName}-security-group-ingress-collator-ws
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: !Ref CollatorWSPort
          ToPort: !Ref CollatorWSPort

        - Description: !Sub ${AWS::StackName}-security-group-ingress-embedded-relayer-p2p
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: !Ref EmbeddedRelayerP2PPort
          ToPort: !Ref EmbeddedRelayerP2PPort

      SecurityGroupEgress:
        - Description: !Sub ${AWS::StackName}-security-group-egress-all
          CidrIp: 0.0.0.0/0
          IpProtocol: "-1"
          FromPort: 0
          ToPort: 0

  NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: load_balancing.cross_zone.enabled
          Value: true
      Scheme: internet-facing
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Type: network

  CollatorTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: ip
      Port: 22
      Protocol: TCP
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 10
      HealthCheckPort: 22
      HealthCheckProtocol: TCP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
      VpcId: !Ref VPC
      
  CollatorNetworkLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref CollatorTargetGroup
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: 22
      Protocol: TCP        
        
  MountTargetSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VPC
      GroupDescription: !Sub ${AWS::StackName}-mount-target-security-group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '2049'
        ToPort: '2049'
        CidrIp: 0.0.0.0/0

Outputs: #TODO
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: Bitcoin-VPC

  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export:
      Name: Bitcoin-PrivateSubnets

  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1
    Export:
      Name: Bitcoin-PrivateSubnet1

  PrivateSubnet2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet2
    Export:
      Name: Bitcoin-PrivateSubnet2

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: Bitcoin-PublicSubnets

  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1
    Export:
      Name: Bitcoin-PublicSubnet1

  PublicSubnet2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2
    Export:
      Name: Bitcoin-PublicSubnet2
      
  NLBListener:
    Description: NLBListener
    Value: !Ref NetworkLoadBalancerListenerElectrum
    Export:
      Name: Bitcoin-NLBListener

  NLBTargetGroup:
    Description: TargetGroup
    Value: !Ref TargetGroupElectrum
    Export:
      Name: Bitcoin-TargetGroup
      
  ECSHostSecurityGroup:
    Description: ECSHostSecurityGroup
    Value: !Ref ECSHostSecurityGroup
    Export:
      Name: Bitcoin-ECSHostSecurityGroup

  ECSTaskExecutionRole:
    Description: ECSTaskExecutionRole
    Value: !Ref ECSTaskExecutionRole
    Export:
      Name: Bitcoin-ECSTaskExecutionRole

  BitcoinExecutionRole:
    Description: BitcoinExecutionRole ARN
    Value: !GetAtt 'BitcoinExecutionRole.Arn'
    Export:
      Name: Bitcoin-BitcoinExecutionRole-ARN

  Cluster:
    Description: A reference to the ECS cluster
    Value: !Ref ECSCluster
    Export:
      Name: Bitcoin-ECSCluster

  EFS:
    Description: A reference to EFS
    Value: !Ref FileSystem
    Export:
      Name: Bitcoin-EFS